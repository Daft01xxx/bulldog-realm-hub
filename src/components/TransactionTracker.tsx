import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { ExternalLink, Search } from 'lucide-react';

interface TransactionTrackerProps {
  onTransactionFound?: (txData: any) => void;
}

export default function TransactionTracker({ onTransactionFound }: TransactionTrackerProps) {
  const [address, setAddress] = useState('');
  const [loading, setLoading] = useState(false);

  const checkTonScan = (addressToCheck: string) => {
    const cleanAddress = addressToCheck.replace(/[^A-Za-z0-9_-]/g, '');
    const tonScanUrl = `https://tonscan.org/address/${cleanAddress}`;
    window.open(tonScanUrl, '_blank');
  };

  const convertAddress = (inputAddress: string) => {
    const cleanAddress = inputAddress.trim();
    let converted = '';
    let info = '';

    if (cleanAddress.startsWith('UQ')) {
      converted = 'EQ' + cleanAddress.substring(2);
      info = 'UQ ‚Üí EQ (non-bounceable ‚Üí bounceable)';
    } else if (cleanAddress.startsWith('EQ')) {
      converted = 'UQ' + cleanAddress.substring(2);
      info = 'EQ ‚Üí UQ (bounceable ‚Üí non-bounceable)';
    } else {
      info = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞–¥—Ä–µ—Å–∞';
    }

    return { converted, info };
  };

  return (
    <Card className="card-glow p-4">
      <h3 className="text-lg font-semibold text-gold mb-4 flex items-center gap-2">
        <Search className="w-5 h-5" />
        –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      </h3>

      <div className="space-y-4">
        <div>
          <Label htmlFor="address" className="text-sm font-medium">
            TON –∞–¥—Ä–µ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
          </Label>
          <Input
            id="address"
            value={address}
            onChange={(e) => setAddress(e.target.value)}
            placeholder="EQBN-LD_8VQJFG_Y2F3TEKcZDwBjQ9uCMlU7EwOA8beQ_gX7"
            className="mt-1"
          />
        </div>

        <div className="flex gap-2">
          <Button
            onClick={() => checkTonScan(address || "EQBN-LD_8VQJFG_Y2F3TEKcZDwBjQ9uCMlU7EwOA8beQ_gX7")}
            className="button-gold flex-1"
            disabled={loading}
          >
            <ExternalLink className="w-4 h-4 mr-2" />
            –û—Ç–∫—Ä—ã—Ç—å –≤ TonScan
          </Button>
        </div>

        {address && (
          <Card className="p-3 bg-muted/50">
            <h4 className="text-sm font-semibold mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥—Ä–µ—Å–µ:</h4>
            <div className="text-xs space-y-1">
              <p>
                <span className="text-muted-foreground">–ò—Å—Ö–æ–¥–Ω—ã–π:</span> {address}
              </p>
              {(() => {
                const { converted, info } = convertAddress(address);
                return (
                  <>
                    <p>
                      <span className="text-muted-foreground">–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π:</span> {converted}
                    </p>
                    <p>
                      <span className="text-muted-foreground">–¢–∏–ø:</span> {info}
                    </p>
                  </>
                );
              })()}
            </div>
          </Card>
        )}

        <Card className="p-3 bg-blue-500/10 border-blue-500/20">
          <h4 className="text-sm font-semibold text-blue-400 mb-2">üí° –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ñ–æ—Ä–º–∞—Ç–∞–º –∞–¥—Ä–µ—Å–æ–≤:</h4>
          <div className="text-xs text-muted-foreground space-y-1">
            <p>‚Ä¢ <strong>EQ:</strong> Bounceable –∞–¥—Ä–µ—Å (–¥–ª—è –∫–æ—à–µ–ª—å–∫–æ–≤) - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è</p>
            <p>‚Ä¢ <strong>UQ:</strong> Non-bounceable –∞–¥—Ä–µ—Å (–¥–ª—è —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)</p>
            <p>‚Ä¢ –ï—Å–ª–∏ TON –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ –∞–¥—Ä–µ—Å–∞</p>
            <p>‚Ä¢ –í TonScan –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</p>
          </div>
        </Card>
      </div>
    </Card>
  );
}